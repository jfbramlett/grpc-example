// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route_guide.proto

package routeguide

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RouteRequest struct {
	Destination          string   `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Userid               int32    `protobuf:"varint,3,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteRequest) Reset()         { *m = RouteRequest{} }
func (m *RouteRequest) String() string { return proto.CompactTextString(m) }
func (*RouteRequest) ProtoMessage()    {}
func (*RouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7d679f20da65b7b, []int{0}
}

func (m *RouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteRequest.Unmarshal(m, b)
}
func (m *RouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteRequest.Marshal(b, m, deterministic)
}
func (m *RouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteRequest.Merge(m, src)
}
func (m *RouteRequest) XXX_Size() int {
	return xxx_messageInfo_RouteRequest.Size(m)
}
func (m *RouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RouteRequest proto.InternalMessageInfo

func (m *RouteRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *RouteRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RouteRequest) GetUserid() int32 {
	if m != nil {
		return m.Userid
	}
	return 0
}

type RouteDetails struct {
	Reouteid             int32    `protobuf:"varint,1,opt,name=reouteid,proto3" json:"reouteid,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	TravelerEmail        string   `protobuf:"bytes,3,opt,name=traveler_email,json=travelerEmail,proto3" json:"traveler_email,omitempty"`
	Stops                int32    `protobuf:"varint,4,opt,name=stops,proto3" json:"stops,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RouteDetails) Reset()         { *m = RouteDetails{} }
func (m *RouteDetails) String() string { return proto.CompactTextString(m) }
func (*RouteDetails) ProtoMessage()    {}
func (*RouteDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_b7d679f20da65b7b, []int{1}
}

func (m *RouteDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RouteDetails.Unmarshal(m, b)
}
func (m *RouteDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RouteDetails.Marshal(b, m, deterministic)
}
func (m *RouteDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RouteDetails.Merge(m, src)
}
func (m *RouteDetails) XXX_Size() int {
	return xxx_messageInfo_RouteDetails.Size(m)
}
func (m *RouteDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_RouteDetails.DiscardUnknown(m)
}

var xxx_messageInfo_RouteDetails proto.InternalMessageInfo

func (m *RouteDetails) GetReouteid() int32 {
	if m != nil {
		return m.Reouteid
	}
	return 0
}

func (m *RouteDetails) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *RouteDetails) GetTravelerEmail() string {
	if m != nil {
		return m.TravelerEmail
	}
	return ""
}

func (m *RouteDetails) GetStops() int32 {
	if m != nil {
		return m.Stops
	}
	return 0
}

func init() {
	proto.RegisterType((*RouteRequest)(nil), "routeguide.RouteRequest")
	proto.RegisterType((*RouteDetails)(nil), "routeguide.RouteDetails")
}

func init() { proto.RegisterFile("route_guide.proto", fileDescriptor_b7d679f20da65b7b) }

var fileDescriptor_b7d679f20da65b7b = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xdd, 0x4a, 0x03, 0x31,
	0x10, 0x85, 0x5d, 0xeb, 0x16, 0x3b, 0xfe, 0x61, 0x28, 0x12, 0xea, 0xcd, 0xb2, 0x20, 0xf4, 0x2a,
	0x88, 0x3e, 0x81, 0xc5, 0x9f, 0x4b, 0x4b, 0x1e, 0xc0, 0x12, 0x9b, 0xa1, 0x04, 0xd2, 0xcd, 0x9a,
	0x64, 0xc5, 0x7b, 0x5f, 0x5c, 0x32, 0x59, 0xdb, 0x85, 0x5e, 0x9e, 0x6f, 0x86, 0x73, 0x66, 0x0e,
	0x5c, 0x7b, 0xd7, 0x45, 0x5c, 0x6d, 0x3a, 0xa3, 0x51, 0xb4, 0xde, 0x45, 0xc7, 0x80, 0x10, 0x91,
	0xfa, 0x03, 0xce, 0x65, 0x52, 0x12, 0xbf, 0x3a, 0x0c, 0x91, 0x55, 0x70, 0xa6, 0x31, 0x44, 0xd3,
	0xa8, 0x68, 0x5c, 0xc3, 0x8b, 0xaa, 0x98, 0x4f, 0xe4, 0x10, 0xb1, 0x29, 0x94, 0xb8, 0x55, 0xc6,
	0xf2, 0x63, 0x9a, 0x65, 0xc1, 0x6e, 0x60, 0xdc, 0x05, 0xf4, 0x46, 0xf3, 0x51, 0x55, 0xcc, 0x4b,
	0xd9, 0xab, 0xfa, 0xb7, 0xe8, 0x03, 0x9e, 0x31, 0x2a, 0x63, 0x03, 0x9b, 0xc1, 0xa9, 0xc7, 0x04,
	0x8c, 0x26, 0xf7, 0x52, 0xee, 0x74, 0x9a, 0x59, 0xb7, 0xce, 0xc9, 0xd9, 0x7d, 0xa7, 0xd9, 0x1d,
	0x5c, 0x46, 0xaf, 0xbe, 0xd1, 0xa2, 0x5f, 0xe5, 0xfc, 0x11, 0x6d, 0x5c, 0xfc, 0xd3, 0x17, 0xba,
	0x63, 0x0a, 0x65, 0x88, 0xae, 0x0d, 0xfc, 0x84, 0xbc, 0xb3, 0x78, 0x78, 0x07, 0xa0, 0x23, 0xde,
	0xd2, 0xcf, 0xec, 0x09, 0x26, 0xaf, 0xa6, 0xd1, 0x44, 0x18, 0x17, 0xfb, 0x36, 0xc4, 0xb0, 0x8a,
	0xd9, 0xe1, 0xa4, 0xff, 0xa1, 0x3e, 0x5a, 0xdc, 0xc3, 0xad, 0x71, 0x62, 0xe3, 0xdb, 0xb5, 0xc0,
	0x1f, 0xb5, 0x6d, 0x2d, 0x86, 0xc1, 0xf6, 0xe2, 0x6a, 0x9f, 0xb6, 0x4c, 0x95, 0x2f, 0x8b, 0xcf,
	0x31, 0x75, 0xff, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x04, 0x56, 0x7f, 0x90, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteGuideClient is the client API for RouteGuide service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteGuideClient interface {
	FindRoute(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (*RouteDetails, error)
}

type routeGuideClient struct {
	cc *grpc.ClientConn
}

func NewRouteGuideClient(cc *grpc.ClientConn) RouteGuideClient {
	return &routeGuideClient{cc}
}

func (c *routeGuideClient) FindRoute(ctx context.Context, in *RouteRequest, opts ...grpc.CallOption) (*RouteDetails, error) {
	out := new(RouteDetails)
	err := c.cc.Invoke(ctx, "/routeguide.RouteGuide/FindRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteGuideServer is the server API for RouteGuide service.
type RouteGuideServer interface {
	FindRoute(context.Context, *RouteRequest) (*RouteDetails, error)
}

// UnimplementedRouteGuideServer can be embedded to have forward compatible implementations.
type UnimplementedRouteGuideServer struct {
}

func (*UnimplementedRouteGuideServer) FindRoute(ctx context.Context, req *RouteRequest) (*RouteDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindRoute not implemented")
}

func RegisterRouteGuideServer(s *grpc.Server, srv RouteGuideServer) {
	s.RegisterService(&_RouteGuide_serviceDesc, srv)
}

func _RouteGuide_FindRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteGuideServer).FindRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routeguide.RouteGuide/FindRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteGuideServer).FindRoute(ctx, req.(*RouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteGuide_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.RouteGuide",
	HandlerType: (*RouteGuideServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindRoute",
			Handler:    _RouteGuide_FindRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "route_guide.proto",
}
